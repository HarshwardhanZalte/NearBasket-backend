# .github/workflows/ci-cd.yml

name: Nearbasket CI/CD on Render

# Triggers: Run this workflow on push or pull request to the 'main' branch
on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

# Jobs: A sequence of tasks to be executed
jobs:
  build-test-deploy:
    name: Build, Test and Deploy
    runs-on: ubuntu-latest # Use the latest Ubuntu runner

    steps:
      # Step 1: Check out the repository code
      - name: Checkout code
        uses: actions/checkout@v4

      # Step 2: Set up the Python environment
      - name: Set up Python 3.11
        uses: actions/setup-python@v5
        with:
          python-version: "3.11"
          cache: 'pip' # Cache pip dependencies to speed up subsequent runs

      # Step 3: Install project dependencies
      - name: Install Dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          pip install flake8 # Install flake8 for linting

      # Step 4: Run Linter (Flake8) for code quality check
      - name: Lint with Flake8
        run: |
          # stop the build if there are Python syntax errors or undefined names
          flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
          # exit-zero treats all errors as warnings. The GitHub editor is 127 chars wide
          flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics

      # Step 5: Run Django Tests
      # IMPORTANT: Assumes you have tests in your apps. If not, this step may fail.
      # You'll also need to configure a test database, often SQLite in-memory for CI.
      # For now, we are skipping this until the test environment is fully configured.
      # To enable it, uncomment the line below.
      # - name: Run Django Tests
      #   run: python manage.py test

      # Step 6: Notify Google Chat that deployment is starting
      # This step only runs on a push to the 'main' branch, not on pull requests.
      - name: Notify Google Chat - In Progress
        if: github.event_name == 'push' && github.ref == 'refs/heads/main'
        uses: co-d/gha-google-chat-notification@v1
        with:
          name: Deployment Started
          url: ${{ secrets.GOOGLE_CHAT_WEBHOOK_URL }}
          status: IN_PROGRESS
          message: |
            üöÄ A new deployment for the *nearbasket* app has been initiated by *${{ github.actor }}*.
            Commit: `${{ github.event.head_commit.message }}`
            <${{ github.server_url }}/${{ github.repository }}/commit/${{ github.sha }}|View Commit>

      # Step 7: Deploy to Render by triggering the deploy hook
      # This step only runs if all previous steps were successful and it's a push to 'main'.
      - name: Trigger Render Deploy
        if: success() && github.event_name == 'push' && github.ref == 'refs/heads/main'
        run: curl "${{ secrets.RENDER_DEPLOY_HOOK_URL }}"

      # Step 8: Notify Google Chat of Success
      # This step only runs if the deployment step (and all before it) succeeded.
      - name: Notify Google Chat - Success
        if: success() && github.event_name == 'push' && github.ref == 'refs/heads/main'
        uses: co-d/gha-google-chat-notification@v1
        with:
          name: Deployment Successful
          url: ${{ secrets.GOOGLE_CHAT_WEBHOOK_URL }}
          status: SUCCESS
          message: |
            ‚úÖ The deployment for the *nearbasket* app was successful!
            The latest changes are now live.
            <${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }}|View Workflow Run>

      # Step 9: Notify Google Chat of Failure
      # This step only runs if any of the previous steps failed.
      - name: Notify Google Chat - Failure
        if: failure() && github.event_name == 'push' && github.ref == 'refs/heads/main'
        uses: co-d/gha-google-chat-notification@v1
        with:
          name: Deployment Failed
          url: ${{ secrets.GOOGLE_CHAT_WEBHOOK_URL }}
          status: FAILURE
          message: |
            ‚ùå The deployment for the *nearbasket* app has failed.
            Please check the GitHub Actions logs for details.
            <${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }}|View Workflow Run>
